{
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended"
  ],
  "parser": "babel-eslint",
  "plugins": [
    "react"
  ],
  "rules": {
    "comma-dangle": [1, "never"],
    "jsx-quotes": ["error", "prefer-double"],
    "max-len": ["error", 120],
    "no-mixed-spaces-and-tabs": "error",
    "no-tabs": "error",
    "no-use-before-define": ["error", { "functions": false, "classes": true }],
    "no-undefined": ["error"],
    "object-curly-spacing": [0, "never"],
    "semi": ["error", "never"],
    "space-before-function-paren": 0,
    "react/jsx-indent": [1, 2],
    "react/jsx-indent-props": [1, 2],
    "react/forbid-prop-types": [2, { "forbid": ["any"] }],
    "react/jsx-boolean-value": [0],
    "react/sort-comp": [2, {
      "order": [
        "static-methods",
        "lifecycle",
        "everything-else",
        "render"
      ],
      "groups": {
        "lifecycle": [
          "displayName",
          "propTypes",
          "props",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "statics",
          "defaultProps",
          "state",
          "constructor",
          "getDefaultProps",
          "getInitialState",
          "state",
          "getChildContext",
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "componentDidUpdate",
          "componentWillUnmount"
        ]
      }
    }],
    "react/jsx-pascal-case": 2,
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-unused-prop-types": 1,
    "react/no-multi-comp": [1, { "ignoreStateless": true }],
    "react/prefer-stateless-function": 2,
    "quotes": ["error", "single"]
  },
  "globals": {
    "console": true,
    "document": true,
    "fetch": true,
    "process": true,
    "navigator": true,
    "URL": true,
    "window": true,
    "describe": true,
    "beforeEach": true,
    "before": true,
    "it": true,
    "expect": true,
    "afterEach": true,
    "after": true
  }
}
